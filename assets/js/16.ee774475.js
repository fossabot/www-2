(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{393:function(e,t,s){"use strict";s.r(t);var n=s(2),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("By default, Linux uses an empty firewall which means that all traffic will pass (with some exceptions). As long as you don't have server applications running and are using a router with a firewall, that would not be an issue.")]),e._v(" "),s("p",[e._v("But most developers use Linux mainly to install server applications and work with them. Wouldn't it be great to have a rock solid firewall setup to prevent leaking data to the local network or, in case of a public server, the outside world?")]),e._v(" "),s("p",[e._v("This article gives a few examples of solid firewall setups which could help devops to secure networking setup.")]),e._v(" "),s("h1",{attrs:{id:"client-side-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#client-side-examples"}},[e._v("#")]),e._v(" Client-side examples")]),e._v(" "),s("h2",{attrs:{id:"basic-solid-client-firewall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-solid-client-firewall"}},[e._v("#")]),e._v(" Basic Solid Client Firewall")]),e._v(" "),s("p",[e._v("The following example shows a basic client side setup which...")]),e._v(" "),s("ul",[s("li",[e._v("Allows incoming local loop-back ("),s("code",[e._v("lo")]),e._v(") traffic (e.g. connections to "),s("code",[e._v("localhost")]),e._v(")")]),e._v(" "),s("li",[e._v("Allows outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic of which is a response to outgoing traffic.")]),e._v(" "),s("li",[e._v("Drops all other, unspecified traffic.")])]),e._v(" "),s("blockquote",[s("p",[s("strong",[e._v("WARNING: Do not use the following set-up on a server.")])]),e._v(" "),s("p",[e._v("It drops incoming connections by default ("),s("code",[e._v("iptables -P INPUT DROP")]),e._v("), so after closing a connection, you won't be able to connect again!")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Reset standard policies and clear the firewall rules")]),e._v("\niptables -P INPUT ACCEPT\niptables -F\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept local loopback connections and incoming connections from established and related connection (e.g. to receive things back from outgoing traffic)")]),e._v("\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set standard policies (Drop all other, unspecified connections)")]),e._v("\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Save this setup")]),e._v("\niptables-save "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/iptables/basic.v4\n")])])]),s("blockquote",[s("p",[s("strong",[e._v("NOTE: iptables commands should be used as superuser.")])]),e._v(" "),s("p",[e._v("So when you're a non-root user, you need to write "),s("code",[e._v("sudo iptables")]),e._v(" instead of "),s("code",[e._v("iptables")]),e._v(".")])]),e._v(" "),s("p",[e._v("To restore the configuration, use "),s("code",[e._v("iptables-restore < /etc/iptables/basic.v4")]),e._v(".")]),e._v(" "),s("h1",{attrs:{id:"server-side-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-side-examples"}},[e._v("#")]),e._v(" Server-side examples")]),e._v(" "),s("h2",{attrs:{id:"basic-http-s-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-http-s-server"}},[e._v("#")]),e._v(" Basic HTTP(S) Server")]),e._v(" "),s("p",[e._v("You might want to run an HTTP/HTTP(S) server, visible to the outside world.")]),e._v(" "),s("p",[e._v("The following example shows a basic server side setup which...")]),e._v(" "),s("ul",[s("li",[e._v("Allows incoming local loop-back ("),s("code",[e._v("lo")]),e._v(") traffic (e.g. connections to "),s("code",[e._v("localhost")]),e._v(")")]),e._v(" "),s("li",[e._v("Allows outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic of which is a response to outgoing traffic.")]),e._v(" "),s("li",[s("strong",[e._v("Allows incoming traffic to ports "),s("code",[e._v("80")]),e._v(" and "),s("code",[e._v("443")]),e._v(".")])]),e._v(" "),s("li",[e._v("Drops all other, unspecified traffic.")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Reset standard policies and clear the firewall rules")]),e._v("\niptables -P INPUT ACCEPT\niptables -F\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept local loopback connections and incoming connections from established and related connection (e.g. to receive things back from outgoing traffic)")]),e._v("\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept those connections to ports 80 and 443 that haven't been rejected")]),e._v("\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(" -j ACCEPT\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("443")]),e._v(" -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set standard policies (Drop all other, unspecified connections)")]),e._v("\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Save this setup")]),e._v("\niptables-save "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/iptables/basic-server.v4\n")])])]),s("hr"),e._v(" "),s("h2",{attrs:{id:"advanced-http-s-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-http-s-server"}},[e._v("#")]),e._v(" Advanced HTTP(S) Server")]),e._v(" "),s("p",[e._v("You might want to make things a little more advanced.")]),e._v(" "),s("p",[e._v("The following example shows a bit more advanced server side setup which...")]),e._v(" "),s("ul",[s("li",[e._v("Allows incoming local loop-back ("),s("code",[e._v("lo")]),e._v(") traffic (e.g. connections to "),s("code",[e._v("localhost")]),e._v(")")]),e._v(" "),s("li",[e._v("Allows outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic of which is a response to outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic to ports "),s("code",[e._v("80")]),e._v(" and "),s("code",[e._v("443")]),e._v(".")]),e._v(" "),s("li",[s("strong",[e._v("Limits the number of concurrent connections to ports "),s("code",[e._v("80")]),e._v(" and "),s("code",[e._v("443")]),e._v(" to a maximum of "),s("code",[e._v("20")]),e._v(" connections per client.")])]),e._v(" "),s("li",[s("strong",[e._v("Rejects connections when that limit is reached.")])]),e._v(" "),s("li",[e._v("Drops all other, unspecified traffic.")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Reset standard policies and clear the firewall rules")]),e._v("\niptables -P INPUT ACCEPT\niptables -F\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept local loopback connections and incoming connections from established and related connection (e.g. to receive things back from outgoing traffic)")]),e._v("\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set a maximum number of connections to ports 80 and 443, reject connections when they exceed the maximum number of connections")]),e._v("\niptables -A INPUT -p tcp --syn --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(" -m connlimit --connlimit-above "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" -j REJECT --reject-with tcp-reset\niptables -A INPUT -p tcp --syn --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("443")]),e._v(" -m connlimit --connlimit-above "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" -j REJECT --reject-with tcp-reset\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept those connections to ports 80 and 443 that haven't been rejected")]),e._v("\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(" -j ACCEPT\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("443")]),e._v(" -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set standard policies (Drop all other, unspecified connections)")]),e._v("\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Save this setup")]),e._v("\niptables-save "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/iptables/advanced-server.v4\n")])])]),s("hr"),e._v(" "),s("h2",{attrs:{id:"advanced-http-s-server-with-restricted-ssh-access"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-http-s-server-with-restricted-ssh-access"}},[e._v("#")]),e._v(" Advanced HTTP(S) Server with (restricted) SSH access")]),e._v(" "),s("p",[e._v("The following example shows an even more advanced server side setup which...")]),e._v(" "),s("ul",[s("li",[e._v("Allows incoming local loop-back ("),s("code",[e._v("lo")]),e._v(") traffic (e.g. connections to "),s("code",[e._v("localhost")]),e._v(")")]),e._v(" "),s("li",[e._v("Allows outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic of which is a response to outgoing traffic.")]),e._v(" "),s("li",[e._v("Allows incoming traffic to ports "),s("code",[e._v("80")]),e._v(" and "),s("code",[e._v("443")]),e._v(".")]),e._v(" "),s("li",[e._v("Limits the number of concurrent connections to ports "),s("code",[e._v("80")]),e._v(" and "),s("code",[e._v("443")]),e._v(" to a maximum of "),s("code",[e._v("20")]),e._v(" connections per client.")]),e._v(" "),s("li",[e._v("Rejects connections when that limit is reached.")]),e._v(" "),s("li",[s("strong",[e._v("Allows SSH connections from "),s("code",[e._v("123.456.789.123")]),e._v(".")])]),e._v(" "),s("li",[e._v("Drops all other, unspecified traffic.")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Reset standard policies and clear the firewall rules")]),e._v("\niptables -P INPUT ACCEPT\niptables -F\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept local loopback connections and incoming connections from established and related connection (e.g. to receive things back from outgoing traffic)")]),e._v("\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set a maximum number of connections to ports 80 and 443, reject connections when they exceed the maximum number of connections")]),e._v("\niptables -A INPUT -p tcp --syn --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(" -m connlimit --connlimit-above "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" -j REJECT --reject-with tcp-reset\niptables -A INPUT -p tcp --syn --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("443")]),e._v(" -m connlimit --connlimit-above "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" -j REJECT --reject-with tcp-reset\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept those connections to ports 80 and 443 that haven't been rejected")]),e._v("\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(" -j ACCEPT\niptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("443")]),e._v(" -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Accept connections to SSH from a specific IP subnet")]),e._v("\niptables -A INPUT -p tcp -s "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("123.456")]),e._v(".789.123 --dport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("22")]),e._v(" -j ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set standard policies (Drop all other, unspecified connections)")]),e._v("\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Save this setup")]),e._v("\niptables-save "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/iptables/advanced-server-ssh.v4\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);